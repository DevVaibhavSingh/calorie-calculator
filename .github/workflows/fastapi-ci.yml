name: Docker CI/CD for FastAPI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      postgres:
        image: postgres:latest
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dbname
        volumes:
          - postgres_data:/var/lib/postgresql/data

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log into DockerHub (Optional, if pushing to DockerHub)
      - name: Log into DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker-compose -f docker-compose.yml build

      # Step 5: Run tests
      - name: Run tests
        run: |
          docker-compose -f docker-compose.yml run fastapi pytest --maxfail=1 --disable-warnings -q

      # Step 6: (Optional) Push Docker image to DockerHub
      - name: Push Docker image to DockerHub
        if: success()
        run: |
          docker-compose -f docker-compose.yml push fastapi

      # Step 7: Clean up Docker images
      - name: Clean up Docker images
        run: |
          docker system prune -af

# Volumes for persistence
volumes:
  postgres_data:
    driver: local
